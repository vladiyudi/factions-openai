import Head from 'next/head'
import Image from 'next/image'
import { Inter } from 'next/font/google'
import { useState } from 'react'
import endent from 'endent'
import { Answer } from '../components/Answer'

const inter = Inter({ subsets: ['latin'] })

export default function Home() {

  const [query, setQuery] = useState("")
  const [answer, setAnswer] = useState('')
  const [chunk, setChunk] = useState([])
  const [loading, setLoading] = useState(false)

  const handleAnswer = async ()=> {

    setLoading(true)
    setAnswer('')
    const searchResponse = await fetch('/api/search', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ query })
    })
    if (!searchResponse.ok) {
      return
    }
    const results = await searchResponse.json()
    setChunk(results)


    const prompt = endent`use the following chunk to answer the question: ${query}
    ${results.map((chunk:any)=>chunk.story).join('\n')} 
    `

    console.log(prompt)

    const answerResponse = await fetch('/api/answer', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ prompt })
    })

    if (!answerResponse.ok) {
      return
    }
    const data = answerResponse.body
    if (!data) {return}
    const reader = data.getReader()
    const decoder = new TextDecoder('utf-8')
    let done = false
    while (!done){
      const { value, done: doneReading } = await reader.read()
      done = doneReading
      const chunkValue = decoder.decode(value)
      setAnswer(prev=>prev+chunkValue)
    }
    setLoading(false)
  }

  return (
    <>
      <Head>
        <title>Mainnet Factions</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
     <div style={{display:'flex', flexDirection:'column', alignItems:'center'}}>
      <textarea
        style ={{width:'100%'}}
        placeholder="What do you wanna know about Machiavellic's factions?"
        value={query}
        onChange={(e) => setQuery(e.target.value)}
        onFocus={(e) => setQuery('')}
        >
       
      </textarea>
      <button onClick={handleAnswer} style={{border:'solid 0.1px', width:'20%'}}>Ask</button>
      <div style={{marginTop:10}}>
        {loading && !answer && <div>loading...</div>}
        {answer && <div>{<Answer text={answer}/>}</div>}
      </div>
     </div>
    </>
  )
}
